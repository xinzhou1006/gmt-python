.. title:: Home

.. raw:: html

    <div class="banner">
        <h1>GMT/Python</h1>
        <h2>
            A Python interface for the
            <a href="http://gmt.soest.hawaii.edu/">Generic Mapping Tools</a>
        </h2>
    </div>

.. gmt-plot::
    :center:

    import gmt

    # Load sample earthquake data in a pandas.DataFrame
    quakes = gmt.datasets.load_usgs_quakes()

    # Load the builtin Earth relief grid as an xarray.DataArray.
    relief = gmt.datasets.load_earth_relief(resolution="30m")

    # The Figure object controls all plotting functions
    fig = gmt.Figure()
    # Setup a map with a global region, a Mollweide projection, and automatic ticks
    fig.basemap(region="g", projection="W200/8i", frame=True)
    # Plot the Earth relief grid in pseudo-color.
    fig.grdimage(relief, cmap="geo")
    # Plot earthquakes as circles. Size maps to magnitude and color to depth.
    fig.plot(x=quakes.longitude, y=quakes.latitude, sizes=0.01*2**quakes.mag,
             color=quakes.depth/quakes.depth.max(), cmap="viridis", style="cc")
    # Show a preview of the image (inline if in a Jupyter notebook).
    fig.show()


.. attention::

    **This package is in early stages development**.
    We welcome any feedback and ideas!
    Let us know by submitting
    `issues on Github <https://github.com/GenericMappingTools/gmt-python/issues>`__
    or send us a message on our
    `Gitter chatroom <https://gitter.im/GenericMappingTools/gmt-python>`__.


Getting Started
---------------

1. Try an online demo at `try.gmtpython.xyz <http://try.gmtpython.xyz>`__
2. :ref:`Install <install>` (Linux and Mac)
3. Follow the :ref:`tutorials`.
4. Take a look at the :ref:`api` to see what is available.

.. note::

    **Found a typo?**
    You can fix it by clicking on "Improve this page" at the top of every page.
    Some pages are autogenerated and can't be edited so you'll be prompted to
    report an issue instead.
    We really appreciate the help!


Project Goals
-------------

* Make GMT more accessible to new users.
* Build a Pythonic API for GMT.
* Interface with the GMT C API directly using :mod:`ctypes` (no system calls).
* Support for rich display in the `Jupyter notebook <http://jupyter.org/>`__.
* Integration with the Scipy stack: :class:`numpy.ndarray` or :class:`pandas.DataFrame`
  for data tables and :class:`xarray.DataArray` for grids.


Contacting Us
-------------

* Most discussion happens
  `on Github <https://github.com/GenericMappingTools/gmt-python>`__. Feel free to
  `open an issue <https://github.com/GenericMappingTools/gmt-python/issues/new>`__ or
  comment on any open issue or pull request.
* We have a `chat room on Gitter <https://gitter.im/GenericMappingTools/gmt-python>`__
  where you can ask questions and leave comments.
* This project is released with a `Contributor Code of Conduct
  <https://github.com/GenericMappingTools/gmt-python/blob/master/CODE_OF_CONDUCT.md>`__.
  By participating in this project you agree to abide by its terms.


Contributing
------------

Please read our `Contributing Guide
<https://github.com/GenericMappingTools/gmt-python/blob/master/CONTRIBUTING.md>`__ to
see how you can help and give feedback.


Related Projects
----------------

* `GMT.jl <https://github.com/GenericMappingTools/GMT.jl>`__: A Julia wrapper for GMT.
* `gmtmex <https://github.com/GenericMappingTools/GMT.jl>`__: A Matlab/Octave wrapper
  for GMT.

Other Python wrappers for GMT:

* `gmtpy <https://github.com/emolch/gmtpy>`__ by `Sebastian Heimann <https://github.com/emolch>`__
* `pygmt <https://github.com/ian-r-rose/pygmt>`__ by `Ian Rose <https://github.com/ian-r-rose>`__
* `PyGMT <https://github.com/glimmer-cism/PyGMT>`__  by `Magnus Hagdorn <https://github.com/mhagdorn>`__


.. toctree::
    :maxdepth: 2
    :hidden:
    :caption: Getting Started

    install.rst
    tutorials/first-steps.ipynb

.. toctree::
    :maxdepth: 2
    :hidden:
    :caption: User Guide

    tutorials/plot-data-points.ipynb
    api/index.rst
    sphinxext.rst
    design.rst
